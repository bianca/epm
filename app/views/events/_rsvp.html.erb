<%
 eu = @event.event_users.find_or_initialize_by(user_id: current_user.id)

  # determine what string to use to describe the existing rsvp
  attend_str = nil
  is_the_coordinator = current_user == @event.coordinator
  if can?(:attend, @event) || current_user.has_role?(:coordinator) || eu.status
    attend_str = 'You '
    if @event.past?
      attend_str += (eu.attending? || eu.attended? || is_the_coordinator) ? 'attended' : 'did not attend'
    elsif eu.waitlisted?
      attend_str += "are ##{@event.waitlisted.index(current_user)+1} on the waitlist for"
    elsif eu.requested?
      attend_str += 'have requested to attend'
    elsif eu.attending? || is_the_coordinator
      attend_str += 'are attending'
    elsif eu.invited?
      attend_str += 'have been invited to attend'
    else
      attend_str += 'are not attending'
    end
    attend_str += " this #{Configurable.event}."
  end

  # determine what buttons to show to change rsvp
  buttons = {}
  if @event.participatable_by? current_user
    if [nil, 'not_attending', 'withdrawn', 'cancelled', 'invited'].include? eu.status
      # todo: this does not handle events where a participant must first request to join if they haven't been invited, which would change the 'attend' text for statuses that are not :invited
      buttons[:attend] = @event.full? ? "Add To Waitlist - #{pluralize @event.waitlisted.count, Configurable.participant} ahead of you" : 'Attend'
      buttons[:unattend] = 'Will Not Attend' if eu.invited?
    elsif eu.waitlisted? || eu.requested?
      buttons[:unattend] = 'Withdraw Request'
    elsif eu.attending?
      buttons[:unattend] = 'Cancel'
    end
  end

%>

<% if current_user.has_any_role?(:participant, :coordinator) || buttons.any? %>

  <div id="rsvp" class="highlight">
    <%= attend_str %>
    <% if buttons.any? %>
      <% buttons.each do |type, label| %>

        <% if type == :attend %>
        <div id="warning" style="width: 500px; padding: 20px">
          Please only sign up if you plan to attend! If you reach 2 no-shows on your account it will be deactivated for the remainder of the season. 
          <br /><br />
          <input type="checkbox" name="i_understand" id="i_understand" />I understand and promise to attend or give NFFTT 24 hrs notice if I can't come.
        </div>
          <% content_for :js_ready do %>
            $('#warning').hide();
            $('#attend').click(function (event) {
              event.preventDefault();
              console.log($('#i_understand').is(':checked'));
              if ($('#warning').is("visible") == false) {
                $('#warning').show();
              } 
              if ($('#i_understand').is(':checked') == true) {

                $("#attend").parent().parent().submit();
              }
            });
          <% end %>
         <% end %>

        <%= button_to label, send("#{type}_event_path", @event), {method: :patch, id: type} %>


      <% end %>
      <% if buttons[:attend] && @event.participants_needed > 0 %>
        <span style="white-space:nowrap">&ndash; <%= pluralize @event.participants_needed, Configurable.participant %> still needed.</span>
      <% end %>
      <% if eu.waitlisted? || (buttons[:attend] && buttons[:attend].include?('aitlist')) %>
          <br>The next <%= Configurable.participant %> on the waitlist will be <strong>automatically</strong> added when someone cancels, and notified by email.
      <% end %>
    <% end %>
  </div>

<% end %>